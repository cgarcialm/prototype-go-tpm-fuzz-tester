name: Fuzz Test with Docker

on:
  pull_request:
    branches:
      - '**' # Trigger on any pull request.
  workflow_dispatch: # Manual trigger.

jobs:
  common-setup:
    runs-on: ubuntu-latest
    steps:
    # Checkout the code from the repository
    - name: Checkout code
      uses: actions/checkout@v2
  
    # Ensure the corpus directory exists
    - name: Ensure corpus directory exists
      run: |
        if [ ! -d "fuzz/corpus" ]; then
        mkdir -p fuzz/corpus
        fi
  
    # Set up Docker Buildx for advanced Docker builds
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    # Build the Docker image for fuzz testing
    - name: Build Docker image
      run: |
        docker build -f fuzz/Dockerfile.fuzz -t my-fuzz-image .
    
        # Save the Docker image as a tarball
    - name: Save Docker image as artifact
      run: |
        docker save my-fuzz-image | gzip > my-fuzz-image.tar.gz

    # Upload the image artifact
    - name: Upload Docker image artifact
      uses: actions/upload-artifact@v4
      with:
        name: my-fuzz-image
        path: my-fuzz-image.tar.gz
              
  fuzzing:
    runs-on: ubuntu-latest
    needs: common-setup

    steps:
      # Download the Docker image artifact
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: my-fuzz-image

      # Load the Docker image from the artifact
      - name: Load Docker image
        run: |
          gunzip -c my-fuzz-image.tar.gz | docker load

      # Run fuzz tests inside the Docker container
      - name: Run fuzz tests in Docker container
        run: |
          docker run --rm -e GOCACHE=$(pwd)/fuzz/corpus my-fuzz-image go test -v -fuzz FuzzTPMSequencesStandard ./fuzz/fuzzer -fuzztime=30s

      # Upload the fuzz corpus directory as an artifact
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: fuzz-corpus
          path: fuzz/corpus

  fuzzing_with_seeds:
    runs-on: ubuntu-latest
    needs: common-setup

    steps:
      # Download the Docker image artifact
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: my-fuzz-image

      # Load the Docker image from the artifact
      - name: Load Docker image
        run: |
          gunzip -c my-fuzz-image.tar.gz | docker load

      # Run fuzz tests inside the Docker container
      - name: Run fuzz tests in Docker container
        run: |
          docker run --rm -e GOCACHE=$(pwd)/fuzz/corpus my-fuzz-image go test -v -fuzz FuzzTPMSequencesWithSeeds ./fuzz/fuzzer -fuzztime=30s

      # Upload the fuzz corpus directory as an artifact
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: fuzz-corpus
          path: fuzz/corpus
